---
globs: *.j
description: JASS 到 Zinc 转换规则（参考 edit/Hero/HeroSelect.j），用于 .j 文件
---

## JASS -> Zinc 转换规则（初始版）

参考实现见：[edit/Hero/HeroSelect.j](mdc:edit/Hero/HeroSelect.j)

- **触发器/计时器优先匿名回调（除非确需复用）**
  - 构建 `trigger` 与 `timer` 时，若回调逻辑仅在单处使用，请优先采用匿名函数：

```jass
// JASS（原版，具名回调）
local trigger t = CreateTrigger()
call TriggerAddAction(t, function HS_Action)

function HS_Action takes nothing returns nothing
    // do something
endfunction
```

```jass
//! zinc
// Zinc（转换后，匿名回调）
trigger t = CreateTrigger();
TriggerAddAction(t, function () {
    // do something
});
//! endzinc
```

- **TimerStart 的匿名回调**

```jass
// JASS（原版）
local timer tm = CreateTimer()
call TimerStart(tm, 0.30, false, function HS_Tick)

function HS_Tick takes nothing returns nothing
    // do something
endfunction
```

```jass
//! zinc
// Zinc（转换后，匿名回调）
timer tm = CreateTimer();
TimerStart(tm, 0.30, false, function () {
    // do something
});
tm = null;
//! endzinc
```

- **loop/endloop 转换为 for 循环（使用局部变量）**
  - 将 JASS 的 `loop ... exitwhen ... endloop` 改为 Zinc 的 `for`，并使用局部变量作为索引；项目内推荐写法为 `for (a <= i <= b)`：

```jass
// JASS（原版）
local integer i = 0
loop
    exitwhen i > 9
    call TriggerRegisterPlayerSelectionEventBJ(t, Player(i), true)
    set i = i + 1
endloop
```

```jass
//! zinc
// Zinc（转换后，for）
integer i;
for (0 <= i <= 9) {
    TriggerRegisterPlayerSelectionEventBJ(t, Player(i), true);
}
//! endzinc
```

### 与通用 Zinc 规则的协同

- 本规则与 [zinc-j](mdc:.cursor/rules/zinc-j.mdc) 配合使用：
  - 遵循“无闭包”：匿名回调无法直接访问外层局部变量，需通过哈希表按句柄 id 保存/读取。
  - 所有局部变量需在函数开头统一声明；
  - 所有 handler 类局部变量在函数尾部置 `null`，先释放可释放对象（定时器、触发器、组等）。

### 迁移小贴士（参考 HeroSelect.j 的做法）

- 原本分散在多个具名回调中的简单逻辑，可直接收敛为 `TriggerAddAction(..., function () { ... })` 或 `TimerStart(..., function () { ... })`。
- 原本的 `loop/endloop` 统一替换为 `for (start <= idx <= end)`，索引变量请在函数顶部声明，例如：`integer i;`。
- 若匿名回调内需要访问外层数据，请用 `Save*`/`Load*` + `GetHandleId(GetExpiredTimer())` 或相关句柄 id 的方案传递。

### 快速核对清单

- 触发器/计时器：是否已优先使用匿名回调？
- 循环：是否将 `loop/endloop` 改为 `for`，并使用局部索引变量？
- 局部变量：是否已在函数顶部声明齐全？
- handler：是否已在作用域末尾释放并置 `null`？

以上规则为初始版本，后续可根据项目实际迁移情况持续补充。

